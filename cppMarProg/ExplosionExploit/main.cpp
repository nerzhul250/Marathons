#include <iostream>
#include <string.h>
using namespace std;
int n,m,d;
int s[10];
float dp[7][7][7][7][7][7][7][7][7][7];
double allPossible(int damage){

    int decide=1;
    for(int i=5;i<10;i++){
        if(s[i]!=0){
            decide=0;
            break;
        }
    }
    if(decide)return 1;


    if(damage==0)return 0;


    double val=dp[s[0]][s[1]][s[2]][s[3]][s[4]][s[5]][s[6]][s[7]][s[8]][s[9]];
    if(val>0.0)return val;

    double countNum=0;
    for(int i=0;i<10;i++){
        if(s[i]!=0){
            countNum++;
        }
    }

    for(int i=0;i<10;i++){
        if(s[i]!=0){
            s[i]--;
            val+=((1/countNum)*allPossible(damage-1));
            s[i]++;
        }
    }

    dp[s[0]][s[1]][s[2]][s[3]][s[4]][s[5]][s[6]][s[7]][s[8]][s[9]]=val;

    return val;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n >> m >> d;
    for(int i=0;i<n;i++){
        cin >> s[i];
    }
    for(int i=5;i<m+5;i++){
        cin >> s[i];
    }
    cout << allPossible(d)<<"\n";
    return 0;
}
